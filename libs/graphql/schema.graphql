type Clarification {
  createdAt: ISO8601DateTime!
  id: ID!
  updatedAt: ISO8601DateTime!
  visits: Int!
  words: [Word!]!
}

"""
The connection type for Clarification.
"""
type ClarificationConnection {
  """
  A list of edges.
  """
  edges: [ClarificationEdge]

  """
  A list of nodes.
  """
  nodes: [Clarification]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type ClarificationEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Clarification
}

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime @specifiedBy(url: "https://tools.ietf.org/html/rfc3339")

type Mutation {
  signIn(
    """
    Parameters for SignIn
    """
    input: SignInInput!
  ): SignInPayload
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}

type Query {
  """
  Get the clarification based on a provided word.
  """
  clarification(word: String!): Clarification

  """
  Get a list of clarifications
  """
  clarifications(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    search: String
    sort: String
  ): ClarificationConnection!

  """
  Get a list of site examples for a given word ID
  """
  siteExamples(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    status: SiteExampleStatus
    wordId: ID!
  ): SiteExampleConnection!
}

"""
Autogenerated input type of SignIn
"""
input SignInInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  email: String!
  password: String!
}

"""
Autogenerated return type of SignIn.
"""
type SignInPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  token: String
  user: User
}

type Site {
  code: String!
  id: ID!
  name: String!
  parser: String!

  """
  The public URL for the site that can be presented to final users.
  """
  publicUrl: String
  siteExamplesCount: Int!
  url: String!
}

type SiteExample {
  approved: Boolean!
  createdAt: ISO8601DateTime!
  directLink: String!
  id: ID!
  key: String!
  site: Site
  status: SiteExampleStatus
  text: String!
  updatedAt: ISO8601DateTime!
  word: Word
}

"""
The connection type for SiteExample.
"""
type SiteExampleConnection {
  """
  A list of edges.
  """
  edges: [SiteExampleEdge]

  """
  A list of nodes.
  """
  nodes: [SiteExample]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type SiteExampleEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: SiteExample
}

"""
The current status of a site example. Site examples need to be approved by an admin in order
to be valid and displayed to the final users.
"""
enum SiteExampleStatus {
  """
  Example already approved in admin
  """
  APPROVED

  """
  Example that was ignored
  """
  IGNORED

  """
  Example not approved yet
  """
  TO_APPROVE
}

type User {
  createdAt: ISO8601DateTime!
  email: String!
  id: ID!
  name: String!
  passwordDigest: String
  updatedAt: ISO8601DateTime!
  username: String!
}

type Word {
  banned: Boolean
  classification: String!
  createdAt: ISO8601DateTime!
  examplesCount: Int
  exists: Boolean
  id: ID!
  openForSiteExamples: Boolean
  siteExamples(
    """
    Restrict examples to a specific status
    """
    status: SiteExampleStatus
  ): [SiteExample!]
  siteExamplesCount: Int
  text: String!
  updatedAt: ISO8601DateTime!
}
